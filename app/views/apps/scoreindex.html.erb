<style>
.okcolor { 
  color: green;
}

.warning { 
  color: darkorange;
}

.failed { 
  color: red;
}
</style>
<h2>BHOF Scoring</h2>
<form>
Filter by Category/Type: <%= select_tag('catfilter',options_for_select(BHOF_SELECT_HASH, @catfilter)) %>
<input type="submit" value="Filter" class="btn btn-primary">
<p></p>
</form>

<% if @apps.length == 0 -%>
  <P>There are no applications that match your critera.</P>
<% else -%>

    <% if @scores_closed -%>
    <div class="alert alert-danger">
    <P>Scoring for this event is currently disabled.</p>
    <% else -%>

    <div class="alert alert-warning">
    <B>Heads up!</B> Changes on this page automatically save. When you
    see the green checkmark, your changes have been saved. To retract your
    score, remove all of the text from the field.
    </p>

    <% if current_user.has_role?(:bhof_judge) -%>
    <P><B> You are a BHOF "Super" Judge: </B> You can see all comments and
    forward for review. This data is not shown to other scorers. <BR>
    Your scores are your own, but the "Forward for review" selection is
    global (one decision per application) and when set to "Yes" will
    allow reviewers to score the application.</p>
    <% end -%>
    <% end -%>
    </div>

<TABLE class="table table-striped applist" width=100%>
<THEAD>
<TH>Performer Name</TH>
<TH>City</TH>
<TH>Country</TH>
<TH>Type</TH>
<TH>Category</TH>
<TH>Essay Questions</TH>
<% if current_user.has_role?(:bhof_judge) -%>
  <TH>Current Scores/Comments</TH>
<% end -%>
<TH>Video</TH>
<TH width="150">Your Score</TH>

<% if current_user.has_role?(:bhof_judge) -%>
  <TH>Forward&nbsp;for&nbsp;Review?</TH>
<% end -%>
</THEAD>
<TBODY>
<% @apps.each { | a | %> 
<TR>
<TD>
  <%=a.entry.name%>
</TD>
<TD>
  <%=a.entry.city_from%>
</TD>
<TD>
  <%=a.entry.country_from%>
</TD>
<TD>
  <%=type_to_s(a.entry.type)%>
</TD>
<TD>
  <%=cat_to_s(a.entry.category)%>
</TD>
<TD>
  <p><b>Performance Description</b><br/>
    <%=a.entry_techinfo.act_description%> <%=link_to " (details)", review_app_path(a) %>
  </p>
  <% if not current_user.has_role?(:bhof_judge) -%>
  <p>
    <b>Perfomer Comments</b><br/>
    <%=a.entry.comments%>
    <br/>
  </p>
  <p>
    <b>Style</b><br/>
    <%=a.entry.style%>
    <br/>
  </p>
  <p>
    <b>Why Act Unique</b><br/>
    <%=a.entry.why_act_unique%>
  </p>
</TD>
<% end -%>


  
</TD>
<% if current_user.has_role?(:bhof_judge) -%>
<TD>
  <% if @appscores[a.id].nil? || @appscores[a.id][:stats]['accepted'] == 0 -%>
    No scores.
  <% else -%>
    <P ALIGN=CENTER>
    <strong>Max:</strong> <%=number_with_precision(@appscores[a.id][:stats]['max'], precision:2) %> /
    <strong>Min:</strong> <%=number_with_precision(@appscores[a.id][:stats]['min'], precision:2) %> /
    <strong>Avg:</strong> <%=number_with_precision(@appscores[a.id][:stats]['avg'], precision:2) %>
    </P>
    <% @appscores[a.id][:scores].each { |r| -%>
    <% if r.recused == true -%>
     <B>    <%= User.find(r.judge_id).name.titleize %></B>:  <I> Recused </I> <BR>
    <% else -%>
     <B>    <%= User.find(r.judge_id).name.titleize %></B>:  <%=number_with_precision(r.score, precision:2) %><BR>
    <% end -%>
      <P>
       <%=r.comments %>
      </p>
    <% } -%>
  <% end  -%>
</TD>
<% end -%>
<TD>
  <a href="<%=a.entry.video_url%>" target="_video">Watch</a>
</TD>

<TD class="scoreupdate">
  <% if @scores_closed -%>
    <%=@userscores[a.id.to_s].nil? ? "" : @userscores[a.id.to_s][:score]%><BR>
    <%=(@userscores[a.id.to_s].present? and @userscores[a.id.to_s].recused == true) ? "(Recused)" : "" %>
  <% else -%>
  <div class="input-group">
    <input type="text" class="form-control scorebox" 
           id="score_<%=a.id.to_s%>" 
           value="<%=@userscores[a.id.to_s].nil? ? "" : @userscores[a.id.to_s][:score]%>"
           review_id="<%=@userscores[a.id.to_s].nil? ? "" : @userscores[a.id.to_s][:id]%>"
           />
    <span class="input-group-addon">
      <i class="glyphicon glyphicon-ok-sign" id="icon_<%=a.id.to_s%>"></i>
    </span>
  </div>
  <div class="form-inline form-group">
    <input type="checkbox" class="form-control input-small"
           id="recused_<%=a.id.to_s%>" 
           value="1",
           review_id="<%=@userscores[a.id.to_s].nil? ? "" : @userscores[a.id.to_s][:id]%>"
           <%=(@userscores[a.id.to_s].present? and @userscores[a.id.to_s].recused == true) ? "CHECKED" : "" %> />
    <label for="recused_<%=a.id.to_s%>"> Recuse me. </label>
  </div>
  <% end -%>
</TD>

<% if current_user.has_role?(:bhof_judge) -%>
<% if @scores_closed -%>
<TD>
 <strong><%= a.forward_for_review.nil? ? "" : ['No', 'Yes', 'Maybe'][a.forward_for_review] -%></strong>
</TD>
<% else -%>
<TD class="fwdreview">
      <%= radio_button_tag "forward_#{a.id.to_s}", "1", !!(a.forward_for_review.nil? || a.forward_for_review == 1), :id=>"yes" %>Yes<BR>
      <%= radio_button_tag "forward_#{a.id.to_s}", "0", !!(a.forward_for_review.nil? || a.forward_for_review == 0), :id=>"no" %>No<BR>
      <%= radio_button_tag "forward_#{a.id.to_s}", "2", !!(a.forward_for_review.nil? || a.forward_for_review == 2), :id=>"maybe" %>Maybe<BR>
</TD>
<% end -%> 
<% end -%>
</TR>
<% } %>
</TBODY>
</TABLE>

<% end -%>

<script>
$('.scorebox').popover({
    'title': 'Scoring Help',
    'trigger':'focus', 
    'html' : true, 
    'container' : 'body', 
    'placement' : 'left',
    'content': "<OL>  <LI>Unworthy, Dismissible</LI>  <LI>Not Memorable</LI>  <LI>Mediocre</LI>  <LI>Ok, so-so</LI>  <LI>Middle of the road. Not good enough to perform.</LI>  <LI>Worth Considering.</LI>  <LI>Very good.</LI>  <LI>Outstanding quality.</LI>  <LI>Excellent in all areas, craft, execution, idea.</LI>  <LI>Pageant winner material, Best work you\'ve seen</LI></OL>"});

function mark_as_undefined($obj) { 
  $icon = $obj.parent("div").children("span").children("i");
  $icon.removeClass().addClass("glyphicon glyphicon-ok-sign")
}

function mark_as_ok($obj) { 
  $icon = $obj.parent("div").children("span").children("i");
  $icon.removeClass().addClass("glyphicon glyphicon-ok-sign okcolor")
}

function mark_as_failed($obj) { 
  $icon = $obj.parent("div").children("span").children("i");
  $icon.removeClass().addClass("glyphicon glyphicon-remove-sign failed")
}

function mark_as_questionable($obj) {
  $icon = $obj.parent("div").children("span").children("i");
  $icon.removeClass().addClass("glyphicon glyphicon-question-sign warning")
}

$(document).ready(function () { 
  $('td.fwdreview').delegate('input', 'change', function() { 
    /* updates the forward-review dialog if you're a judge */
    var $this = $(this);

    var appdata = {
      "authenticity_token" : AUTH_TOKEN,
      "forward_for_review": $this.attr('value')
    };

    name = $this.attr('name')
    res = name.split('_')
    appid = res[1]

    // update the record
    $.ajax({
        type: 'PUT',
           dataType: 'json',
           url: '/apps/' + appid + '.json',
           contentType: 'application/json',
           data: JSON.stringify(appdata),
           success: function() { 
           }
         });
   });

  $('td.scoreupdate').delegate('input', 'keypress', function() {
    /* mark the field's Ajax state as unknown if an edit begins */
    mark_as_questionable($(this));
  });
  
  $('td.scoreupdate').delegate('input', 'change', function() {
    /* create or update the score on the server */
    var $this = $(this);
    var recused = false;

    /* are we the recuse box or the input box? */
    if ($this.attr('id').indexOf("recused") > -1) {
      // this is the checkbox. 
      if ($this.is(':checked')) { 
        recused = true; 
      }
      // continue with the update as if we're the input box. 
      $this = $this.parent().parent().find("input").first()
      if (recused) { 
        $this.val('0.0') 
      }
    } 

    var name = $this.attr('id');
    var res = name.split('_');
    var appid = res[1];
    var review_id = $this.attr('review_id')
    var type = "POST";
    var url = "/bhofreviews.json";

    if ((typeof review_id != "undefined") && (review_id != "")) { 
       type = "PUT";
       url = "/bhofreviews/" + review_id + ".json"
    }

    if ($this.val() == "") {
       mark_as_undefined($this);
       type = "DELETE";
    }

    var jsondata = {
      "id": review_id, 
      "authenticity_token" : AUTH_TOKEN,
      "score": $this.val(),
  	  "recused": recused,
      "app_id": appid
    };

    // update the record
    $.ajax({
       type: type,
       dataType: 'json',
       url: url,
       contentType: 'application/json',
       data: JSON.stringify(jsondata),
       success: function(response) { 
         mark_as_ok($this);

         // update review ID and recused boxes on each field. 
         if (typeof response._id == 'undefined') { 
           $this.removeAttr('review_id');
           $this.parent().parent().find("input:eq(1)").removeAttr("review_id");
         } else  { 
           $this.attr('review_id', response._id);
           $this.parent().parent().find("input:eq(1)").attr('review_id', response._id);
         }

         if (response.recused) {
            $this.parent().parent().find("input:eq(1)")[0].checked = true;
         } else {
            $this.parent().parent().find("input:eq(1)")[0].checked = false;
         }
       },
       error: function(xhr, textStatus, error) { 
         console.log(xhr.statusText);

         console.log(textStatus);
         console.log(error);
         mark_as_failed($this);
      }
    });

   });

});

</script>

