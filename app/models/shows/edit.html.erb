<h3 xmlns="http://www.w3.org/1999/html">Edit: <%=@show.title%></h3>
<P>
<I><%=@show.venue%></I><BR>
Doors <%=@show.door_time.strftime(SHORT_TIME_FMT)%> / 
Show <%=@show.show_time.strftime(TIME_ONLY_FMT)%>
</p>

<div id="editFormToggle">
<% if @show.errors.count > 0 %>
<span style="float: left" class="ui-icon ui-icon-triangle-1-s toggle-icon" style="vertical-align:middle"></span><span id="toggle-txt">Hide Show Details</span>
<% else %>
<span style="float: left" class="ui-icon ui-icon-triangle-1-e toggle-icon" style="vertical-align:middle"></span><span id="toggle-txt">Edit Show Details</span>
<% end %>
</div>

<div id="metadataform" <% if @show.errors.count == 0 %>style="display:none"<% end %>>
<%= render 'form' %>
</div>

<%= render 'note_modal' %>
<%= render 'duration_modal' %>
<%= render 'move_modal' %>
<hr>
<h4>Available Acts</h4>
<div id="actFormToggle">
<P><span style="float: left" class="ui-icon ui-icon-triangle-1-s toggle-act-icon" style="vertical-align:middle"></span><span id="act-toggle-txt">Hide Act List</span></P>
</div>
<div id="actTable">
<table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="actslist">
<thead>
 <TH>Owner</TH>
 <TH>Stage/Act Name</TH>
 <TH>Short Description</TH>
 <TH>Performer Length + Music</TH>
 <TH>Date Added</TH>
 <TH>Add</TH>
</thead>
<tbody>
<!-- data -->
</tbody>
</table>
</div>
<HR>
<h3>Show Schedule</h3>
Drag and Drop rows to re-order show. Changes will automatically save. Click 'Refresh' to recalculate times.
<P><button class="btn btn-info btn-small" id="addNoteBtn">
<i class="glyphicon glyphicon-plus white"></i> Add Note/Intermission
</button>
<button class="btn btn-success btn-small" id="refreshBtn">
<i class="glyphicon glyphicon-refresh glyphicon-white"></i> Refresh </button>

<a href="/shows/<%=@show.id%>/refresh_act_times"<button class="btn btn-warning btn-small" id="refreshBtn">
<i class="glyphicon glyphicon-refresh glyphicon-white"></i> Refresh Act Times </button>
</a>
</p>
<table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="showlist">
<thead>
<TR>
<TH width=30>Seq</TH>
<TH>Time</TH>
<TH>Act</TH>
<TH>Sound</TH>
<TH>Light + Stage</TH>
<TH>Notes</TH>
<TH width=215>Actions</TH>
</TR>
</thead>
<tbody>
<!-- data -->
</tbody>
</TABLE>

<script>
<!-- extend datatables to do ajax reloading correctly --> 
(function($, window, document) {
if ( typeof $.fn.dataTable == "function" &&
     typeof $.fn.dataTableExt.fnVersionCheck == "function" &&
     $.fn.dataTableExt.fnVersionCheck('1.7.0') )
   {
     $.fn.dataTableExt.oApi.fnReloadAjax = function(oSettings, oUrl, oData)
        {
          // if we're reloading acts, make sure we apply the latest data
          if (oSettings.sAjaxSource.indexOf("acts.json") !== -1) { 
            oUrl="/acts.json?latest=" + $('#latestacts').is(':checked');
          }

          if (oUrl)
           oSettings.sAjaxSource=oUrl;

          //oSettings.sAjaxSource = sNewSource;
          this.fnClearTable(this);
          this.oApi._fnProcessingDisplay(oSettings, true );
          var that = this;
       
          $.getJSON(oSettings.sAjaxSource, oData, function(json){
          /* Got the data - add it to the table */
          for (var i=0; i < json.aaData.length; i++)
          {
            that.oApi._fnAddData(oSettings, json.aaData[i]);
          }
       
          oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
          that.fnDraw(that);
          that.oApi._fnProcessingDisplay(oSettings, false);
       });
     }
   }
})(jQuery, window, document);

$.extend( $.fn.dataTableExt.oStdClasses, {
    "sWrapper": "dataTables_wrapper form-inline"
} );

/* set up acts datatable */
$(document).ready(function() {
  $("#noteModal").modal('hide');
  $("#durationModal").modal('hide');
  $("#moveModal").modal('hide');

  $("#addNoteBtn").on('click', function(e) { 
    e.preventDefault();
    $('#noteModal').modal('show');
    $("#noteModal input:text:nth-of-type(1)").focus();   
  });

  actsDT = $('#actslist').dataTable( {
      "sDom": "<'row'<'col-6'l><'col-12'f>r>t<'row'<'col-12'i><'col-12'p>>",
      "sAjaxSource": "/acts.json",
      "iDisplayLength": 5,
      "oLanguage": {
	  	"sLengthMenu": "Show _MENU_ acts per page&nbsp;&nbsp;<input type='checkbox' name='latestacts' id='latestacts' value='1' onchange='actsDT.fnReloadAjax(); return(true);'> Only show latest acts"
	  },
     "fnServerData": function ( sSource, aoData, fnCallback ) {
        $.ajax({'datatype':'json',
                'type':'GET',
                'url':sSource,
                'data':aoData,
                'success':function(json) {               
                   fnCallback(json);
            }})
          }
  });
  
  showDT = $('#showlist').dataTable( {
        "sDom": "<'row'<'col-12'l><'col-12'f>r>t<'row'<'col-6'i><'col-12'p>>",
        "sAjaxSource": "/shows/<%=@show.id%>/show_items.json",
        "iDisplayLength": 15,
        "oLanguage": 
{        "sLengthMenu": "Show&nbsp;<select size=1 name=actslist_length aria-controls=\"actslist\"><option value='5'>5</option><option value='10'>10</option><option value='15'>15</option><option value='30'>30</option></select>&nbsp;items per page"
          },
        "fnServerData": function ( sSource, aoData, fnCallback ) {
          $.ajax({'datatype':'json',
                'type':'GET',
                'url':sSource,
                'data':aoData,
                'success':function(json) {               
                    fnCallback(json);
              }});
        }
    }).rowReordering({
		sURL: "/show_items/update_seq",
        sData: {"authenticity_token" : AUTH_TOKEN }
	});

  /* set up the lower table */
  var fixHelper = function(e, ui) {
    ui.children().each(function() {
        $(this).width($(this).width());
      });
    return ui;
  };
  
  $("#sort tbody").sortable({
    helper: fixHelper
        }).disableSelection();
  
  /* this delegated event handler works, but needs to go down one level. */
  $("#actslist tbody").delegate("td", "click", function() {
      if ($(".actadder", this)[0] != undefined) { 
        var clicked_id = $(".actadder", this)[0].id;
        var actdata = {
          'show_id':'<%=@show.id%>',
          'kind': '32',
          'act_id': clicked_id,
          "authenticity_token" : AUTH_TOKEN
        };
      
        $.ajax({
          type: 'POST',
              dataType: 'json',
              url: '/show_items.json',
              contentType: 'application/json',
              data: JSON.stringify(actdata),
              success: function() { 
                showDT.fnReloadAjax();
              }
          });
      }
    });

  $("#showlist").delegate("button", "click", function() {
      var clicked_id = $(this).attr("id");
      var actdata = { "authenticity_token" : AUTH_TOKEN };

      if ($(this).attr("class").indexOf("sidestroy") != -1) { 
        $.ajax({
          type: 'DELETE',
              dataType: 'json',
              url: '/show_items/' + clicked_id + '.json',
              contentType: 'application/json',
              data: JSON.stringify(actdata),
              success: function() { 
                showDT.fnReloadAjax();
              }
          });
       }

       if ($(this).attr("class").indexOf("editact") != -1) { 
         var clicked_id = $(this).attr("id");
         window.location.href="/acts/" + clicked_id + "/edit?return_to=<%=@show.id%>";
       }

       if ($(this).attr("class").indexOf("move") != -1) { 
        /* handle move up or down */
        var direction = "up";
        var rowId = $(this).parent().siblings(":first").text();

        if ($(this).attr("class").indexOf("movedown") != -1) { direction = "down" };

        actdata['direction'] = direction;
        actdata['show_id'] = '<%=@show.id%>';
        actdata['row_id'] = rowId;

        $.ajax({
          type: 'POST',
              dataType: 'json',
              url: '/show_items/' + clicked_id + '/move.json',
              contentType: 'application/json',
              data: JSON.stringify(actdata),
              success: function() { 
                showDT.fnReloadAjax();
              }
          });
       }

       if ($(this).attr("class").indexOf("editduration") != -1) { 
         var clicked_id = $(this).attr("id");
         show_item_id.value = clicked_id;
         $("#durationModal").modal('show'); 
         $("#durationModal input:text:nth-of-type(1)").focus();
       }

       if ($(this).attr("class").indexOf("exact") != -1) { 
         var clicked_id = $(this).attr("id");
         show_item_id.value = clicked_id;
         var title = this.parentNode.parentNode.children[2].innerText;
         if (title == "--") { title = this.parentNode.parentNode.children[5].innerText; }

         $("#moveModal").modal('show'); 
         $("#moveModal label:nth-of-type(1)").focus().html("Move <B>\"" + title + "\"</B> to which position?");
       }

    });


  /* add act clicks */
  $(document).ready( function () { 
	    $("#refreshBtn").click( function (e) {
          e.preventDefault();
          showDT.fnReloadAjax();
      });
     
      $("#editFormToggle").click( function (e) {
          e.preventDefault();
          $(".toggle-icon").toggleClass('ui-icon-triangle-1-e');		
          $(".toggle-icon").toggleClass('ui-icon-triangle-1-s');
          $("#metadataform").slideToggle();
          
          if ($(".toggle-icon").hasClass("ui-icon-triangle-1-s")) { 
            $("#toggle-txt").html("Hide Details");
          } else {
            $("#toggle-txt").html("Edit Show Details");
          }
        });

      $("#actFormToggle").click( function (e) {
          e.preventDefault();
          $(".toggle-act-icon").toggleClass('ui-icon-triangle-1-e');		
          $(".toggle-act-icon").toggleClass('ui-icon-triangle-1-s');
          $("#actTable").slideToggle();
          
          if ($(".toggle-act-icon").hasClass("ui-icon-triangle-1-s")) { 
            $("#act-toggle-txt").html("Hide Act List");
          } else {
            $("#act-toggle-txt").html("Show Act List");
          }
        });

    });
  });
  
</script>
