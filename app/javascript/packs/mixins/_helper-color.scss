@use "sass:color";
@use "../functions";
@use "../variables";

@mixin helper-color($color, $value) {
	.bg-gradient-#{$color} {
		background-color: $value !important;
		background-image: linear-gradient(to bottom, color.adjust($value, $lightness: 10%), color.adjust($value, $lightness: -5%)) !important;
	}
	.theme-#{$color} {
		--#{variables.$prefix}app-theme: #{$value};
		--#{variables.$prefix}app-theme-rgb: #{to-rgb($value)};
		--#{variables.$prefix}app-theme-color: #{color-contrast($value)};
		--#{variables.$prefix}app-theme-color-rgb: #{to-rgb(color-contrast($value))};
		
		--#{variables.$prefix}app-theme-hover: #{functions.shade-color($value, 25%)};
		--#{variables.$prefix}app-theme-hover-border-color: #{functions.shade-color($value, 25%)};
		--#{variables.$prefix}app-theme-hover-color: #{color-contrast($value)};
		
		--#{variables.$prefix}app-theme-active: #{functions.shade-color($value, 25%)};
		--#{variables.$prefix}app-theme-active-border-color: #{functions.shade-color($value, 25%)};
		--#{variables.$prefix}app-theme-active-color: #{color-contrast($value)};
		
		--#{variables.$prefix}app-theme-disabled: #{functions.tint-color($value, 25%)};
		--#{variables.$prefix}app-theme-disabled-border-color: #{functions.tint-color($value, 25%)};
		--#{variables.$prefix}app-theme-disabled-color: #{color-contrast($value)};
		
		--#{variables.$prefix}link-color-rgb: #{to-rgb($value)};
		--#{variables.$prefix}link-hover-color-rgb: #{functions.shade-color($value, 25%)};
	
		@if ($color == 'yellow') {
			--#{variables.$prefix}app-theme-color: #{variables.$black};
			--#{variables.$prefix}app-theme-color-rgb: #{to-rgb(variables.$black)};
		}
	}
	@if (
		$color != 'gray' and
		$color != 'gray-100' and
		$color != 'gray-200' and
		$color != 'gray-300' and
		$color != 'gray-400' and
		$color != 'gray-500' and
		$color != 'gray-600' and
		$color != 'gray-700' and
		$color != 'gray-800' and
		$color != 'gray-900') {
		@for $i from 1 through 5 {
			.bg-#{$color}-#{$i * 100} {
				--#{variables.$prefix}bg-opacity: 1;
			
				background-color: rgba(functions.tint-color($value, ((5 - $i) * 20%)), var(--#{variables.$prefix}bg-opacity)) !important;
			}
			.text-#{$color}-#{$i * 100} {
				--#{variables.$prefix}text-opacity: 1;
			
				color: rgba(functions.tint-color($value, ((5 - $i) * 20%)), var(--#{variables.$prefix}text-opacity)) !important;
			}
		}
		@for $i from 6 through 9 {
			.bg-#{$color}-#{$i * 100} {
				--#{variables.$prefix}bg-opacity: 1;
			
				background-color: rgba(functions.shade-color($value, ($i - 5) * 20%), var(--#{variables.$prefix}bg-opacity)) !important;
			}
			.text-#{$color}-#{$i * 100} {
				--#{variables.$prefix}text-opacity: 1;
			
				color: rgba(functions.shade-color($value, ($i - 5) * 20%), var(--#{variables.$prefix}text-opacity)) !important;
			}
		}
	}
}